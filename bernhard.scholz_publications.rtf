{\rtf\ansi\deff0 \r\n{\fonttbl{\f0 Times new Roman;}{\f1 Arial;}}
{\colortbl;\red0\green0\blue0;}
{\info
}
\deftab1298 \paperw11907 \paperh16443 \margl1701 \margr1701 \margt567 \margb1134 {\header \pard \qc \sa180 {\fs24 \f1 Publications for Bernhard Scholz}
\par }
\cols2 \colsx567 
\pard \ql \sb20 \sa80 {\fs24 \f0 \b Publications for Bernhard Scholz}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2023}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Huang, X., Burgstaller, B., Scholz, B. (2023). EVMTracer: Dynamic Analysis of the Parallelization and Redundancy Potential in the Ethereum Virtual Machine. \i IEEE Access\i0 . <a href="http://dx.doi.org/10.1109/ACCESS.2023.3267277">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2022}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Dietrich, J., Chang, L., Qian, L., Henry, L., McCartin, C., Scholz, B. (2022). Efficient Sink-Reachability Analysis via Graph Reduction. \i IEEE Transactions On Knowledge And Data Engineering\i0 , 34(11), 5321-5335. <a href="http://dx.doi.org/10.1109/TKDE.2021.3052710">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Raca, V., Umboh, S., Mehofer, E., Scholz, B. (2022). Runtime and energy constrained work scheduling for heterogeneous systems. \i Journal of Supercomputing\i0 , 78(15), 17150-17177. <a href="http://dx.doi.org/10.1007/s11227-022-04556-7">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2021}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Huang, X., Zhao, D., Jordan, H., Scholz, B. (2021). An efficient interpreter for Datalog by de-specializing relations. \i 42nd ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI 2021)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3453483.3454070">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kim, Y., Jeong, S., Jezek, K., Burgstaller, B., Scholz, B. (2021). An off-the-chain execution environment for scalable testing and profiling of smart contracts. \i 2021 USENIX Annual Technical Conference, ATC 2021\i0 , Santa Clara: USENIX The Advanced Computing Systems Association.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jordan, H., Subotic, P., Zhao, D., Scholz, B. (2021). Specializing parallel data structures for Datalog. \i Concurrency and Computation: Practice and Experience\i0 , 34(2), 1-25. <a href="http://dx.doi.org/10.1002/cpe.5643">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Huang, X., Karp, J., Zhao, D., Zreika, A., Wu, X., Scholz, B. (2021). The Choice Construct in the Souffl\uc0\u65533  Language. \i 19th Asian Symposium on Programming Languages and Systems, APLAS 2021\i0 , Chicago: Springer. <a href="http://dx.doi.org/10.1007/978-3-030-89051-3_10">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Zhao, D., Raghothaman, M., Subotic, P., Scholz, B. (2021). Towards elastic incrementalization for datalog. \i 23rd International Symposium on Principles and Practice of Declarative Programming, PPDP 2021, co-located with the 31st International Symposium on Logic-Based Program Synthesis and Transformation, LOPSTR 2021\i0 , United States: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3479394.3479415">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2020}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Zhao, D., Subotic, P., Scholz, B. (2020). Debugging Large-scale Datalog: A Scalable Provenance Evaluation Strategy. \i ACM Transactions on Programming Languages and Systems\i0 , 42(2), 1-35. <a href="http://dx.doi.org/10.1145/3379446">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Brent, L., Grech, N., Lagouvardos, S., Scholz, B., Smaragdakis, Y. (2020). Ethainter: A smart contract security analyzer for composite vulnerabilities. \i 41st ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI 2020)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3385412.3385990">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Shen, J., Wu, X., Grech, N., Scholz, B., Smaragdakis, Y. (2020). Explaining bug provenance with trace witnesses. \i 9th ACM SIGPLAN International Workshop on the State Of the Art in Program Analysis, SOAP 2020, co-located with the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2020\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3394451.3397206">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Grech, N., Kong, M., Jurisevic, A., Brent, L., Scholz, B., Smaragdakis, Y. (2020). MadMax: Analyzing the Out-of-Gas World of Smart Contracts. \i Communications of the ACM\i0 , 63(10), 87-95. <a href="http://dx.doi.org/10.1145/3416262">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Raghothaman, M., Mendelson, J., Zhao, D., Naik, M., Scholz, B. (2020). Provenance-guided synthesis of datalog programs. \i Proceedings of the ACM on Programming Languages\i0 , 4, 1-27. <a href="http://dx.doi.org/10.1145/3371130">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2019}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jordan, H., Subotic, P., Zhao, D., Scholz, B. (2019). A specialized B-tree for concurrent datalog evaluation. \i 24th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPoPP 2019)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3293883.3295719">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jordan, H., Subotic, P., Zhao, D., Scholz, B. (2019). Brie: A specialized trie for concurrent datalog. \i 10th International Workshop on Programming Models and Applications for Multicores and Manycores (PMAM 2019)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3303084.3309490">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Nappa, P., Zhao, D., Subotic, P., Scholz, B. (2019). Fast parallel equivalence relations in a datalog compiler. \i 28th International Conference on Parallel Architectures and Compilation Techniques (PACT 2019)\i0 , Piscataway: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/PACT.2019.00015">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Grech, N., Brent, L., Scholz, B., Smaragdakis, Y. (2019). Gigahorse: Thorough, Declarative Decompilation of Smart Contracts. \i 41st International Conference on Software Engineering (ICSE)\i0 , Piscataway: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/icse.2019.00120">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2018}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Subotic, P., Jordan, H., Chang, L., Fekete, A., Scholz, B. (2018). Automatic index selection for large-scale datalog computation. \i Proceedings of the VLDB Endowment\i0 , 12(2), 141-153. <a href="http://dx.doi.org/10.14778/3282495.3282500">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Grech, N., Kong, M., Jurisevic, A., Brent, L., Scholz, B., Smaragdakis, Y. (2018). MadMax: Surviving Out-of-Gas Conditions in Ethereum Smart Contracts. \i Proceedings of the ACM on Programming Languages\i0 , 2(OOPSLA), 116:1-116:27. <a href="http://dx.doi.org/10.1145/3276486">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jordan, H., Scholz, B., Subotic, P. (2018). POSTER: Two concurrent data structures for efficient datalog query processing. \i 23rd ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPoPP 2018)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3178487.3178525">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jones, M., Mestre, J., Scholz, B. (2018). Towards Memory-Optimal Schedules for SDF. \i European Conference on Parallel Processing: EURO-PAR 2017\i0 , Cham: Springer. <a href="http://dx.doi.org/10.1007/978-3-319-75178-8_8">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2017}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hassanshahi, B., Ramesh, R., Krishnan, P., Scholz, B., Lu, Y. (2017). An efficient tunable selective points-to analysis for large codebases. \i 6th ACM SIGPLAN International Workshop on State of the Art in Program Analysis (SOAP 2017)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3088515.3088519">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2016}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Dietrich, J., Hollingum, N., Scholz, B. (2016). A note on the soundness of difference propagation. \i 18th Workshop on Formal Techniques for Java-like Programs (FTfJP 2016)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2955811.2955814">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Jordan, H., Subotic, P., Westmann, T. (2016). On fast large-scale program analysis in Datalog. \i 25th International Conference on Compiler Construction (CC 2016)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2892208.2892226">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jordan, H., Scholz, B., Subotic, P. (2016). Souffle: On synthesis of program analyzers. \i 28th International Conference on Computer Aided Verification (CAV 2016)\i0 , Toronto: Springer. <a href="http://dx.doi.org/10.1007/978-3-319-41540-6_23">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2015}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Vorobyov, K., Krishnan, P., Westmann, T. (2015). A Datalog Source-To-Source Translator for Static
\par Program Analysis: An Experience Report. \i 24th Australasian Software Engineering Conference (ASWEC) 2015\i0 , Adelaide: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/ASWEC.2015.15">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Allen, N., Krishnan, P., Scholz, B. (2015). Combining type-analysis with points-to analysis for analyzing Java library source-code. \i SOAP 2015 - 4th ACM SIGPLAN International Workshop on the State of the Art in Program Analysis\i0 . Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2771284.2771287">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kakkad, V., Santosa, A., Fekete, A., Scholz, B. (2015). Computing end-to-end delays in stream query processing. \i Science of Computer Programming\i0 , 105, 124-144. <a href="http://dx.doi.org/10.1016/j.scico.2015.04.003">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Dietrich, J., Hollingum, N., Scholz, B. (2015). Giga-scale exhaustive points-to analysis for Java in under a minute. \i 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA 2015)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2814270.2814307">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Ko, Y., Burgstaller, B., Scholz, B. (2015). LaminarIR: compile-time queues for structured streams. \i The 36th ACM SIGPLAN Conference on Programming Language Design and Implementation\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2737924.2737994">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Allen, N., Scholz, B., Krishnan, P. (2015). Staged Points-to Analysis for Large Code Bases.  In Bjorn Franke (Eds.), \i Compiler Construction\i0 , (pp. 131-150). Heidelberg: Springer-Verlag. <a href="http://dx.doi.org/10.1007/978-3-662-46663-6_7">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hollingum, N., Scholz, B. (2015). Towards a Scalable Framework for Context-Free Language Reachability.  In Bjorn Franke (Eds.), \i Compiler Construction\i0 , (pp. 193-211). Heidelberg: Springer-Verlag. <a href="http://dx.doi.org/10.1007/978-3-662-46663-6_10">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2014}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kakkad, V., Dey, A., Fekete, A., Scholz, B. (2014). Curracurrong cloud: Stream processing in the cloud. \i 2014 IEEE 30th International Conference on Data Engineering Workshops (ICDEW 2014)\i0 , Chicago, Illinois, USA: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/ICDEW.2014.6818328">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kakkad, V., Attar, S., Santosa, A., Fekete, A., Scholz, B. (2014). Curracurrong: a stream programming environment for wireless sensor networks. \i Software: Practice and Experience\i0 , 44(2), 175-199. <a href="http://dx.doi.org/10.1002/spe.2165">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2013}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Pang, X., Chawla, S., Scholz, B., Wilcox, G. (2013). A Scalable Approach for LRT Computation in GPGPU Environments. \i 15th Asia-Pacific Web Conference on Web Technologies and Applications (APWeb 2013)\i0 , Berlin: Springer. <a href="http://dx.doi.org/10.1007/978-3-642-37401-2_58">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Ko, Y., Burgstaller, B., Scholz, B. (2013). Parallel from the beginning: The case for multicore programming in the computer science undergraduate curriculum. \i 44th ACM Technical Symposium on Computer Science Education (SIGCSE 2013)\i0 , Denver, United States: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2012}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Choi, S., Ko, S., Eom, H., Han, Y. (2012). A Recommendation System Based on a Subset of Raters. \i 6th International Conference on Ubiquitous Information Management and Communication, ICUIMC12\i0 , New York, NY, USA: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2184751.2184866">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Scholz, B., Blieberger, J. (2012). A symbolic analysis framework for static analysis of imperative programming languages. \i The Journal of Systems and Software\i0 , 85(6), 1418-1439. <a href="http://dx.doi.org/10.1016/j.jss.2011.11.1039">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kakkad, V., Santosa, A., Scholz, B. (2012). Migrating Operator Placement for Compositional Stream Graphs. \i The 15th ACM International Conference on Modeling, Analysis and Simulation of Wireless and Mobile Systems (MSWiM12)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2387238.2387261">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Si, W., Scholz, B., Gudmundsson, J., Mao, G., Boreli, R., Zomaya, A. (2012). On Graphs Supporting Greedy Forwarding for Directional Wireless Networks. \i 2012 IEEE International Conference on Communications (ICC 2012)\i0 , Ottawa, Canada: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/ICC.2012.6363880">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Farhad, S., Ko, Y., Burgstaller, B., Scholz, B. (2012). Orchestration by Approximation: Mapping Stream Programs onto Multicore Architectures. \i ACM SIGPLAN Notices\i0 , 47(4, June), 357-367. <a href="http://dx.doi.org/10.1145/2248487.1950406">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Farhad, S., Ko, Y., Burgstaller, B., Scholz, B. (2012). Profile-Guided Deployment of Stream Programs on Multicores. <i>13th ACM SIGPLAN/SIGBED International 
\par Conference on Languages, Compilers, Tools and Theory for Embedded Systems (LCTES 2012)</i>, New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2248418.2248430">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hong, K., Park, J., Kim, S., Kim, T., Kim, H., Burgstaller, B., Scholz, B. (2012). TinyVM: An energy-efficient execution infrastructure for sensor networks. \i Software: Practice and Experience\i0 , 42(10), 1193-1209. <a href="http://dx.doi.org/10.1002/spe.1123">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jain, S., Zhang, C., Scholz, B. (2012). Translating Flowcharts to Non-Deterministic Languages. <i>ACM SIGPLAN 2012 Workshop on Partial Evaluation and Program Manipulation, PEPM12, colocated with
\par POPL 12 The 39th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages</i>, New York, NY, USA: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2103746.2103775">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2011}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Khoury, R., Burgstaller, B., Scholz, B. (2011). Accelerating the Execution of Matrix languages on the Cell Broadband Engine Architecture. \i IEEE Transactions on Parallel and Distributed Systems\i0 , 22(1), 7-21. <a href="http://dx.doi.org/10.1109/TPDS.2010.58">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Choi, S., Ko, S., Eom, H., Han, Y. (2011). Analyzing category correlations for recommendation system. \i 5th International Conference on Ubiquitous Information Management and Communication, ICUIMC 2011\i0 , New York, USA: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/1968613.1968615">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Farhad, S., Ko, Y., Burgstaller, B., Scholz, B. (2011). Orchestration by approximation: mapping stream programs onto multicore architectures. <i>16th International Conference on
\par Architectural Support for Programming Languages and Operating Systems (ASPLOS 2011)</i>, New York, USA: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/1950365.1950406">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Park, J., Park, J., Song, W., Yoon, S., Burgstaller, B., Scholz, B. (2011). Treegraph-based Instruction Scheduling for Stack-based Virtual Machines. \i Electronic Notes in Theoretical Computer Science\i0 , 279(1), 33-45. <a href="http://dx.doi.org/10.1016/j.entcs.2011.11.004">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2010}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Khoury, R., Dawborn, T., Gafurov, B., Pink, G., Tse, E., Tse, Q., Almi'ani, K., Gaber, M., Roehm, U., Scholz, B. (2010). Corona: Energy-Efficient Multi-query Processing in Wireless Sensor Networks. \i 15th International Conference on Database Systems for Advanced Applications (DASFAA 2010)\i0 , Berlin: Springer. <a href="http://dx.doi.org/10.1007/978-3-642-12098-5_39">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2009}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kim, T., Kim, S., Hong, K., Kim, H., Park, J., Ko, Y., Burgstaller, B., Scholz, B. (2009). An Efficient Mixed-mode Execution Environment for C on Mobile Phone Platforms. \i 2009 WRI World Congress on Computer Science and Information Engineering\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/CSIE.2009.909">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Cifuentes, C., Palmer, D., Keynes, N., Li, L., Long, S., Mealy, E., Mounteney, M., Scholz, B. (2009). BegBunch - Benchmarking for C Bug Detection Tools. \i 2nd International Workshop on Defects in Large Software Systems DEFECTS 2009\i0 , United States: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Cifuentes, C., Keynes, N., Li, L., Scholz, B. (2009). Program Analysis for Bug Dectection using Parfait. \i ACM SIGPLAN Symposium on Partial Evaluation and Program Manipulation PEPM 2009\i0 , United States: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Scholz, B. (2009). Program Assemblers.  In Wah,  Benjamin B (Eds.), \i Wiley Encyclopedia of Computer Science and Engineering, 5 Volume set\i0 , (pp. 2233-2243). Hoboken: John Wiley & Sons.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Ebner, D., Scholz, B., Krall, A. (2009). Progressive Spill Code Placement. \i International Conference on Compilers, Architecture, and Synthesis for Embedded Systems CASES 2009\i0 , United States: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/1629395.1629408">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hong, K., Park, J., Kim, T., Kim, S., Kim, H., Ko, Y., Park, J., Burgstaller, B., Scholz, B. (2009). TinyVM, an Efficient Virtual Machine Infrastructure for Sensor Networks. \i 7th ACM Conference on Embedded Networked Sensor Systems (SenSys 2009)\i0 , USA: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2008}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kim, H., Hong, K., Kim, S., Kim, T., Park, J., Ko, Y., Burgstaller, B., Scholz, B. (2008). Billy get your guns: fast barrel-shift decoding for in-place execution of Huffman-encoded bytecode streams. \i The 3rd International Conference on Ubiquitous Information Technologies & Applications (2008 ICUT)\i0 .}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Ebner, D., Bradner, F., Scholz, B., Krall, A., Wiedermann, P., Kadlec, A. (2008). Generalized Instruction Selection using SSA-Graphs. \i ACM SIGPLAN-SIGBED 2008 Conference on Languages, Compilers and Tools for Embedded Systems (LCTES08)\i0 , New York, USA: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Burgstaller, B., Xue, J. (2008). Minimal Placement of Bank Selection Instructions for Partitioned Memory Architectures. \i ACM Transactions on Embedded Computing Systems\i0 , 7(2), 12:1-12:32. <a href="http://dx.doi.org/10.1145/1331331.1331336">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Cifuentes, C., Scholz, B. (2008). Parfait - Designing a Scalable Bug Checker. \i Static Analysis Workshop (SAW 2008)\i0 , USA: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/1394504.1394505">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Scholz, B., Blieberger, J. (2008). \i Symbolic Analysis: An Algebra-Based Approach\i0 . Germany: VDM Verlag Dr Muller.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Zhang, C., Cifuentes, C. (2008). User-Input Dependence Analysis via Graph Reachability. \i Eighth IEEE International Working Conference on Source Code Analysis and Manipulation (SCAM 2008)\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/SCAM.2008.22">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2007}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Blieberger, J. (2007). A New Elimination-Based Data Flow Analysis
\par Framework Using Annotated Decomposition Trees. <i>CC 2007
\par 16th International Conference on Compiler Construction - ETAPS 2007 European Joint Conference on Theory And Practice of Software</i>, Berlin, Germany: Springer. <a href="http://dx.doi.org/10.1007/978-3-540-71229-9">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Nguyen, Q., Scholz, B. (2007). Computing SSA Form with Matrices. \i Second Workshop on Bytecode Semantics, Verification, Analysis and Transformation (BYTECODE 2007)\i0 . Elsevier.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Gaber, M., Dawborn, T., Khoury, R., Tse, E. (2007). Efficient Time Triggered Query Processing in Wireless Sensor Networks. \i Third International Conference on Embedded Software and Systems (ICESS 2007)\i0 , Berlin, Germany: Springer. <a href="http://dx.doi.org/10.1007/978-3-540-72685-2">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Selvadurai, S., Roehm, U., Scholz, B. (2007). Event Processing Middleware for Wireless Sensor Networks. \i 2007 International Conference on Parallel Processing (ICPP 2007)\i0 , NJ, USA: Institute of Electrical and Electronics Engineers (IEEE).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Curran, J., Murphy, T., Scholz, B. (2007). Minimising semantic drift with Mutual Exclusion Bootstraping. <i>10th Conference of the Pacific Association for Computational Linguistics 
\par (pacling 2007)</i>, Australia: Pacific Association for Computation Linguistics.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Roehm, U., Scholz, B., Gaber, M. (2007). On the Integration of Data Stream Clustering into a Query Processor for Wireless Sensor Networks. \i Eighth International Conference on Mobile Data Management (MDM 2007)\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Schafer, S., Scholz, B. (2007). Optimal Chain Rule Placement for Instruction Selection Based on SSA Graphs. \i 10th International Workshop on Software & Compilers for Embedded Systems (SCOPES) 2007\i0 , New York City, United States: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2006}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Scholz, B., Ertl, A. (2006). An Embedded Systems Programming Environment for C*. <i>Euro-Par 2006 Parallel Processing:
\par 12th International Euro-Par Conference</i>, Germany: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Horspool, R., Pereira, D., Scholz, B. (2006). Fast Profile-Based Partial Redundancy Elimination. \i JMLC 2006 - 7th Joint Modular Languages Conference 2006\i0 , Germany: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Burgstaller, B., Xue, J. (2006). Minimizing Bank Selection Instructions for Partitioned Memory Architectures. \i CASES 2006 - The IEEE International Conference on Compilers, Architecture, and Synthesis for Embedded Systems\i0 , New York: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hames, L., Scholz, B. (2006). Nearly Optimal Register Allocation with PBQP*. \i JMLC 2006 - 7th Joint Modular Languages Conference 2006\i0 , Germany: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Scholz, B., Blieberger, J. (2006). Symbolic Analysis of Imperative Programming Languages. \i JMLC 2006 - 7th Joint Modular Languages Conference 2006\i0 , Germany: Springer.}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2004}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Blieberger, J., Scholz, B. (2004). On The Tree Width Of Ada Programs. \i 9th Ada-Europe International Conference on Reliable Software Technologies\i0 , Berlin: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Horspool, R., Knoop, J. (2004). Optimizing For Space And Time Usage With Speculative Partial Redundancy Elimination. \i 2004 ACM SIGPLAN/SIGBED  Conference on Languages, Compilers and Tools for Embedded Systems (LCTES '04)\i0 , New York, USA: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2003}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Eckstein, E., Scholz, B. (2003). Addressing Mode Selection. \i International Symposium on Code Generation and Optimization (CGO'03)\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Fahringer, T., Scholz, B. (2003). \i Advanced Symbolic Analysis for Compilers: New Techniques and Algorithms for Symbolic Program Analysis and Optimization\i0 . Berlin: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Blieberger, J., Burgstaller, B., Scholz, B. (2003). Busy Wait Analysis. \i 8th International Conference on Reliable Software Technologies Ada-Europe 2003\i0 , Toulouse, France: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Eckstein, E., Konig, O., Scholz, B. (2003). Code Instruction Selection Based on SSA-Graphs. \i 7th International Workshop on Software and Compilers for Embedded Systems\i0 , Vienna: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hirnschott, U., Krall, A., Scholz, B. (2003). Graph Coloring vs. Optimal Register Allocation for Optimizing Compilers. \i JMLC 2006 - 7th Joint Modular Languages Conference 2006\i0 , Germany: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Mehofer, E., Horspool, R. (2003). Partial Redundancy Elimination with Predication Techniques. \i 9th International Euro-Par Conference\i0 , Berlin: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Mehofer, E., Horspool, R. (2003). Predicated Partial Redundancy Elimination using a Cost Analysis. \i Parallel Processing Letters\i0 , 13(4), 525-536. <a href="http://dx.doi.org/10.1142/S0129626403001483">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2002}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Mehofer, E. (2002). Dataflow Frequency Analysis based on Whole Program Paths. \i 11th International Conference on Parallel Architectures and Compilation Techniques (PACT'02)\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Eckstein, E. (2002). Register Allocation for Irregular Architectures. \i Joint-Conference on Languages, Compilers, and Tools for Embedded Systems and Software and Compilers for Embedded Systems (LCTES/SCOPES'02)\i0 , New York, USA: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Probst, M., Krall, A., Scholz, B. (2002). Register Liveness Analysis for Optimizing Dynamic Binary Translation. \i Ninth Working Conference on Reverse Engineering, 2002\i0 , Virginia, USA: Institute of Electrical and Electronics Engineers (IEEE).}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2001}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Mehofer, E., Scholz, B. (2001). A Novel Probabilistic Data Flow Framework. \i 10th International Conference, Compiler Construction 2001\i0 , Berlin: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Fahringer, T., Blaha, P., Hoessinger, A., Luitz, J., Mehofer, E., Moritsch, H., Scholz, B. (2001). Development and performance analysis of real-world
\par applications for distributed and parallel architectures. \i Concurrency and Computation: Practice and Experience\i0 , 13(10), 841-868.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Mehofer, E., Scholz, B. (2001). Probabilistic Communication Optimizations and Parallelization for Distributed-Memory Systems. \i 9th Euromicro Workshop on Parallel and Distributed Processing (PDP'01)\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE).}

}{\rtf\ansi\deff0 \r\n{\fonttbl{\f0 Times new Roman;}{\f1 Arial;}}
{\colortbl;\red0\green0\blue0;}
{\info
}
\deftab1298 \paperw11907 \paperh16443 \margl1701 \margr1701 \margt567 \margb1134 {\header \pard \qc \sa180 {\fs24 \f1 Publications for Bernhard Scholz}
\par }
\cols2 \colsx567 
\pard \ql \sb20 \sa80 {\fs24 \f0 \b Publications for Bernhard Scholz}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2023}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Huang, X., Burgstaller, B., Scholz, B. (2023). EVMTracer: Dynamic Analysis of the Parallelization and Redundancy Potential in the Ethereum Virtual Machine. \i IEEE Access\i0 . <a href="http://dx.doi.org/10.1109/ACCESS.2023.3267277">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2022}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Dietrich, J., Chang, L., Qian, L., Henry, L., McCartin, C., Scholz, B. (2022). Efficient Sink-Reachability Analysis via Graph Reduction. \i IEEE Transactions On Knowledge And Data Engineering\i0 , 34(11), 5321-5335. <a href="http://dx.doi.org/10.1109/TKDE.2021.3052710">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Raca, V., Umboh, S., Mehofer, E., Scholz, B. (2022). Runtime and energy constrained work scheduling for heterogeneous systems. \i Journal of Supercomputing\i0 , 78(15), 17150-17177. <a href="http://dx.doi.org/10.1007/s11227-022-04556-7">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2021}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Huang, X., Zhao, D., Jordan, H., Scholz, B. (2021). An efficient interpreter for Datalog by de-specializing relations. \i 42nd ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI 2021)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3453483.3454070">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kim, Y., Jeong, S., Jezek, K., Burgstaller, B., Scholz, B. (2021). An off-the-chain execution environment for scalable testing and profiling of smart contracts. \i 2021 USENIX Annual Technical Conference, ATC 2021\i0 , Santa Clara: USENIX The Advanced Computing Systems Association.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jordan, H., Subotic, P., Zhao, D., Scholz, B. (2021). Specializing parallel data structures for Datalog. \i Concurrency and Computation: Practice and Experience\i0 , 34(2), 1-25. <a href="http://dx.doi.org/10.1002/cpe.5643">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Huang, X., Karp, J., Zhao, D., Zreika, A., Wu, X., Scholz, B. (2021). The Choice Construct in the Souffl\uc0\u65533  Language. \i 19th Asian Symposium on Programming Languages and Systems, APLAS 2021\i0 , Chicago: Springer. <a href="http://dx.doi.org/10.1007/978-3-030-89051-3_10">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Zhao, D., Raghothaman, M., Subotic, P., Scholz, B. (2021). Towards elastic incrementalization for datalog. \i 23rd International Symposium on Principles and Practice of Declarative Programming, PPDP 2021, co-located with the 31st International Symposium on Logic-Based Program Synthesis and Transformation, LOPSTR 2021\i0 , United States: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3479394.3479415">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2020}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Zhao, D., Subotic, P., Scholz, B. (2020). Debugging Large-scale Datalog: A Scalable Provenance Evaluation Strategy. \i ACM Transactions on Programming Languages and Systems\i0 , 42(2), 1-35. <a href="http://dx.doi.org/10.1145/3379446">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Brent, L., Grech, N., Lagouvardos, S., Scholz, B., Smaragdakis, Y. (2020). Ethainter: A smart contract security analyzer for composite vulnerabilities. \i 41st ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI 2020)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3385412.3385990">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Shen, J., Wu, X., Grech, N., Scholz, B., Smaragdakis, Y. (2020). Explaining bug provenance with trace witnesses. \i 9th ACM SIGPLAN International Workshop on the State Of the Art in Program Analysis, SOAP 2020, co-located with the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2020\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3394451.3397206">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Grech, N., Kong, M., Jurisevic, A., Brent, L., Scholz, B., Smaragdakis, Y. (2020). MadMax: Analyzing the Out-of-Gas World of Smart Contracts. \i Communications of the ACM\i0 , 63(10), 87-95. <a href="http://dx.doi.org/10.1145/3416262">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Raghothaman, M., Mendelson, J., Zhao, D., Naik, M., Scholz, B. (2020). Provenance-guided synthesis of datalog programs. \i Proceedings of the ACM on Programming Languages\i0 , 4, 1-27. <a href="http://dx.doi.org/10.1145/3371130">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2019}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jordan, H., Subotic, P., Zhao, D., Scholz, B. (2019). A specialized B-tree for concurrent datalog evaluation. \i 24th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPoPP 2019)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3293883.3295719">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jordan, H., Subotic, P., Zhao, D., Scholz, B. (2019). Brie: A specialized trie for concurrent datalog. \i 10th International Workshop on Programming Models and Applications for Multicores and Manycores (PMAM 2019)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3303084.3309490">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Nappa, P., Zhao, D., Subotic, P., Scholz, B. (2019). Fast parallel equivalence relations in a datalog compiler. \i 28th International Conference on Parallel Architectures and Compilation Techniques (PACT 2019)\i0 , Piscataway: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/PACT.2019.00015">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Grech, N., Brent, L., Scholz, B., Smaragdakis, Y. (2019). Gigahorse: Thorough, Declarative Decompilation of Smart Contracts. \i 41st International Conference on Software Engineering (ICSE)\i0 , Piscataway: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/icse.2019.00120">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2018}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Subotic, P., Jordan, H., Chang, L., Fekete, A., Scholz, B. (2018). Automatic index selection for large-scale datalog computation. \i Proceedings of the VLDB Endowment\i0 , 12(2), 141-153. <a href="http://dx.doi.org/10.14778/3282495.3282500">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Grech, N., Kong, M., Jurisevic, A., Brent, L., Scholz, B., Smaragdakis, Y. (2018). MadMax: Surviving Out-of-Gas Conditions in Ethereum Smart Contracts. \i Proceedings of the ACM on Programming Languages\i0 , 2(OOPSLA), 116:1-116:27. <a href="http://dx.doi.org/10.1145/3276486">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jordan, H., Scholz, B., Subotic, P. (2018). POSTER: Two concurrent data structures for efficient datalog query processing. \i 23rd ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPoPP 2018)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3178487.3178525">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jones, M., Mestre, J., Scholz, B. (2018). Towards Memory-Optimal Schedules for SDF. \i European Conference on Parallel Processing: EURO-PAR 2017\i0 , Cham: Springer. <a href="http://dx.doi.org/10.1007/978-3-319-75178-8_8">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2017}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hassanshahi, B., Ramesh, R., Krishnan, P., Scholz, B., Lu, Y. (2017). An efficient tunable selective points-to analysis for large codebases. \i 6th ACM SIGPLAN International Workshop on State of the Art in Program Analysis (SOAP 2017)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/3088515.3088519">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2016}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Dietrich, J., Hollingum, N., Scholz, B. (2016). A note on the soundness of difference propagation. \i 18th Workshop on Formal Techniques for Java-like Programs (FTfJP 2016)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2955811.2955814">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Jordan, H., Subotic, P., Westmann, T. (2016). On fast large-scale program analysis in Datalog. \i 25th International Conference on Compiler Construction (CC 2016)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2892208.2892226">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jordan, H., Scholz, B., Subotic, P. (2016). Souffle: On synthesis of program analyzers. \i 28th International Conference on Computer Aided Verification (CAV 2016)\i0 , Toronto: Springer. <a href="http://dx.doi.org/10.1007/978-3-319-41540-6_23">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2015}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Vorobyov, K., Krishnan, P., Westmann, T. (2015). A Datalog Source-To-Source Translator for Static
\par Program Analysis: An Experience Report. \i 24th Australasian Software Engineering Conference (ASWEC) 2015\i0 , Adelaide: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/ASWEC.2015.15">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Allen, N., Krishnan, P., Scholz, B. (2015). Combining type-analysis with points-to analysis for analyzing Java library source-code. \i SOAP 2015 - 4th ACM SIGPLAN International Workshop on the State of the Art in Program Analysis\i0 . Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2771284.2771287">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kakkad, V., Santosa, A., Fekete, A., Scholz, B. (2015). Computing end-to-end delays in stream query processing. \i Science of Computer Programming\i0 , 105, 124-144. <a href="http://dx.doi.org/10.1016/j.scico.2015.04.003">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Dietrich, J., Hollingum, N., Scholz, B. (2015). Giga-scale exhaustive points-to analysis for Java in under a minute. \i 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA 2015)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2814270.2814307">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Ko, Y., Burgstaller, B., Scholz, B. (2015). LaminarIR: compile-time queues for structured streams. \i The 36th ACM SIGPLAN Conference on Programming Language Design and Implementation\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2737924.2737994">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Allen, N., Scholz, B., Krishnan, P. (2015). Staged Points-to Analysis for Large Code Bases.  In Bjorn Franke (Eds.), \i Compiler Construction\i0 , (pp. 131-150). Heidelberg: Springer-Verlag. <a href="http://dx.doi.org/10.1007/978-3-662-46663-6_7">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hollingum, N., Scholz, B. (2015). Towards a Scalable Framework for Context-Free Language Reachability.  In Bjorn Franke (Eds.), \i Compiler Construction\i0 , (pp. 193-211). Heidelberg: Springer-Verlag. <a href="http://dx.doi.org/10.1007/978-3-662-46663-6_10">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2014}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kakkad, V., Dey, A., Fekete, A., Scholz, B. (2014). Curracurrong cloud: Stream processing in the cloud. \i 2014 IEEE 30th International Conference on Data Engineering Workshops (ICDEW 2014)\i0 , Chicago, Illinois, USA: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/ICDEW.2014.6818328">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kakkad, V., Attar, S., Santosa, A., Fekete, A., Scholz, B. (2014). Curracurrong: a stream programming environment for wireless sensor networks. \i Software: Practice and Experience\i0 , 44(2), 175-199. <a href="http://dx.doi.org/10.1002/spe.2165">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2013}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Pang, X., Chawla, S., Scholz, B., Wilcox, G. (2013). A Scalable Approach for LRT Computation in GPGPU Environments. \i 15th Asia-Pacific Web Conference on Web Technologies and Applications (APWeb 2013)\i0 , Berlin: Springer. <a href="http://dx.doi.org/10.1007/978-3-642-37401-2_58">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Ko, Y., Burgstaller, B., Scholz, B. (2013). Parallel from the beginning: The case for multicore programming in the computer science undergraduate curriculum. \i 44th ACM Technical Symposium on Computer Science Education (SIGCSE 2013)\i0 , Denver, United States: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2012}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Choi, S., Ko, S., Eom, H., Han, Y. (2012). A Recommendation System Based on a Subset of Raters. \i 6th International Conference on Ubiquitous Information Management and Communication, ICUIMC12\i0 , New York, NY, USA: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2184751.2184866">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Scholz, B., Blieberger, J. (2012). A symbolic analysis framework for static analysis of imperative programming languages. \i The Journal of Systems and Software\i0 , 85(6), 1418-1439. <a href="http://dx.doi.org/10.1016/j.jss.2011.11.1039">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kakkad, V., Santosa, A., Scholz, B. (2012). Migrating Operator Placement for Compositional Stream Graphs. \i The 15th ACM International Conference on Modeling, Analysis and Simulation of Wireless and Mobile Systems (MSWiM12)\i0 , New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2387238.2387261">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Si, W., Scholz, B., Gudmundsson, J., Mao, G., Boreli, R., Zomaya, A. (2012). On Graphs Supporting Greedy Forwarding for Directional Wireless Networks. \i 2012 IEEE International Conference on Communications (ICC 2012)\i0 , Ottawa, Canada: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/ICC.2012.6363880">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Farhad, S., Ko, Y., Burgstaller, B., Scholz, B. (2012). Orchestration by Approximation: Mapping Stream Programs onto Multicore Architectures. \i ACM SIGPLAN Notices\i0 , 47(4, June), 357-367. <a href="http://dx.doi.org/10.1145/2248487.1950406">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Farhad, S., Ko, Y., Burgstaller, B., Scholz, B. (2012). Profile-Guided Deployment of Stream Programs on Multicores. <i>13th ACM SIGPLAN/SIGBED International 
\par Conference on Languages, Compilers, Tools and Theory for Embedded Systems (LCTES 2012)</i>, New York: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2248418.2248430">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hong, K., Park, J., Kim, S., Kim, T., Kim, H., Burgstaller, B., Scholz, B. (2012). TinyVM: An energy-efficient execution infrastructure for sensor networks. \i Software: Practice and Experience\i0 , 42(10), 1193-1209. <a href="http://dx.doi.org/10.1002/spe.1123">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Jain, S., Zhang, C., Scholz, B. (2012). Translating Flowcharts to Non-Deterministic Languages. <i>ACM SIGPLAN 2012 Workshop on Partial Evaluation and Program Manipulation, PEPM12, colocated with
\par POPL 12 The 39th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages</i>, New York, NY, USA: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/2103746.2103775">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2011}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Khoury, R., Burgstaller, B., Scholz, B. (2011). Accelerating the Execution of Matrix languages on the Cell Broadband Engine Architecture. \i IEEE Transactions on Parallel and Distributed Systems\i0 , 22(1), 7-21. <a href="http://dx.doi.org/10.1109/TPDS.2010.58">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Choi, S., Ko, S., Eom, H., Han, Y. (2011). Analyzing category correlations for recommendation system. \i 5th International Conference on Ubiquitous Information Management and Communication, ICUIMC 2011\i0 , New York, USA: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/1968613.1968615">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Farhad, S., Ko, Y., Burgstaller, B., Scholz, B. (2011). Orchestration by approximation: mapping stream programs onto multicore architectures. <i>16th International Conference on
\par Architectural Support for Programming Languages and Operating Systems (ASPLOS 2011)</i>, New York, USA: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/1950365.1950406">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Park, J., Park, J., Song, W., Yoon, S., Burgstaller, B., Scholz, B. (2011). Treegraph-based Instruction Scheduling for Stack-based Virtual Machines. \i Electronic Notes in Theoretical Computer Science\i0 , 279(1), 33-45. <a href="http://dx.doi.org/10.1016/j.entcs.2011.11.004">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2010}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Khoury, R., Dawborn, T., Gafurov, B., Pink, G., Tse, E., Tse, Q., Almi'ani, K., Gaber, M., Roehm, U., Scholz, B. (2010). Corona: Energy-Efficient Multi-query Processing in Wireless Sensor Networks. \i 15th International Conference on Database Systems for Advanced Applications (DASFAA 2010)\i0 , Berlin: Springer. <a href="http://dx.doi.org/10.1007/978-3-642-12098-5_39">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2009}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kim, T., Kim, S., Hong, K., Kim, H., Park, J., Ko, Y., Burgstaller, B., Scholz, B. (2009). An Efficient Mixed-mode Execution Environment for C on Mobile Phone Platforms. \i 2009 WRI World Congress on Computer Science and Information Engineering\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/CSIE.2009.909">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Cifuentes, C., Palmer, D., Keynes, N., Li, L., Long, S., Mealy, E., Mounteney, M., Scholz, B. (2009). BegBunch - Benchmarking for C Bug Detection Tools. \i 2nd International Workshop on Defects in Large Software Systems DEFECTS 2009\i0 , United States: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Cifuentes, C., Keynes, N., Li, L., Scholz, B. (2009). Program Analysis for Bug Dectection using Parfait. \i ACM SIGPLAN Symposium on Partial Evaluation and Program Manipulation PEPM 2009\i0 , United States: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Scholz, B. (2009). Program Assemblers.  In Wah,  Benjamin B (Eds.), \i Wiley Encyclopedia of Computer Science and Engineering, 5 Volume set\i0 , (pp. 2233-2243). Hoboken: John Wiley & Sons.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Ebner, D., Scholz, B., Krall, A. (2009). Progressive Spill Code Placement. \i International Conference on Compilers, Architecture, and Synthesis for Embedded Systems CASES 2009\i0 , United States: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/1629395.1629408">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hong, K., Park, J., Kim, T., Kim, S., Kim, H., Ko, Y., Park, J., Burgstaller, B., Scholz, B. (2009). TinyVM, an Efficient Virtual Machine Infrastructure for Sensor Networks. \i 7th ACM Conference on Embedded Networked Sensor Systems (SenSys 2009)\i0 , USA: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2008}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Kim, H., Hong, K., Kim, S., Kim, T., Park, J., Ko, Y., Burgstaller, B., Scholz, B. (2008). Billy get your guns: fast barrel-shift decoding for in-place execution of Huffman-encoded bytecode streams. \i The 3rd International Conference on Ubiquitous Information Technologies & Applications (2008 ICUT)\i0 .}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Ebner, D., Bradner, F., Scholz, B., Krall, A., Wiedermann, P., Kadlec, A. (2008). Generalized Instruction Selection using SSA-Graphs. \i ACM SIGPLAN-SIGBED 2008 Conference on Languages, Compilers and Tools for Embedded Systems (LCTES08)\i0 , New York, USA: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Burgstaller, B., Xue, J. (2008). Minimal Placement of Bank Selection Instructions for Partitioned Memory Architectures. \i ACM Transactions on Embedded Computing Systems\i0 , 7(2), 12:1-12:32. <a href="http://dx.doi.org/10.1145/1331331.1331336">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Cifuentes, C., Scholz, B. (2008). Parfait - Designing a Scalable Bug Checker. \i Static Analysis Workshop (SAW 2008)\i0 , USA: Association for Computing Machinery (ACM). <a href="http://dx.doi.org/10.1145/1394504.1394505">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Scholz, B., Blieberger, J. (2008). \i Symbolic Analysis: An Algebra-Based Approach\i0 . Germany: VDM Verlag Dr Muller.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Zhang, C., Cifuentes, C. (2008). User-Input Dependence Analysis via Graph Reachability. \i Eighth IEEE International Working Conference on Source Code Analysis and Manipulation (SCAM 2008)\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE). <a href="http://dx.doi.org/10.1109/SCAM.2008.22">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2007}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Blieberger, J. (2007). A New Elimination-Based Data Flow Analysis
\par Framework Using Annotated Decomposition Trees. <i>CC 2007
\par 16th International Conference on Compiler Construction - ETAPS 2007 European Joint Conference on Theory And Practice of Software</i>, Berlin, Germany: Springer. <a href="http://dx.doi.org/10.1007/978-3-540-71229-9">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Nguyen, Q., Scholz, B. (2007). Computing SSA Form with Matrices. \i Second Workshop on Bytecode Semantics, Verification, Analysis and Transformation (BYTECODE 2007)\i0 . Elsevier.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Gaber, M., Dawborn, T., Khoury, R., Tse, E. (2007). Efficient Time Triggered Query Processing in Wireless Sensor Networks. \i Third International Conference on Embedded Software and Systems (ICESS 2007)\i0 , Berlin, Germany: Springer. <a href="http://dx.doi.org/10.1007/978-3-540-72685-2">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Selvadurai, S., Roehm, U., Scholz, B. (2007). Event Processing Middleware for Wireless Sensor Networks. \i 2007 International Conference on Parallel Processing (ICPP 2007)\i0 , NJ, USA: Institute of Electrical and Electronics Engineers (IEEE).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Curran, J., Murphy, T., Scholz, B. (2007). Minimising semantic drift with Mutual Exclusion Bootstraping. <i>10th Conference of the Pacific Association for Computational Linguistics 
\par (pacling 2007)</i>, Australia: Pacific Association for Computation Linguistics.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Roehm, U., Scholz, B., Gaber, M. (2007). On the Integration of Data Stream Clustering into a Query Processor for Wireless Sensor Networks. \i Eighth International Conference on Mobile Data Management (MDM 2007)\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Schafer, S., Scholz, B. (2007). Optimal Chain Rule Placement for Instruction Selection Based on SSA Graphs. \i 10th International Workshop on Software & Compilers for Embedded Systems (SCOPES) 2007\i0 , New York City, United States: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2006}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Scholz, B., Ertl, A. (2006). An Embedded Systems Programming Environment for C*. <i>Euro-Par 2006 Parallel Processing:
\par 12th International Euro-Par Conference</i>, Germany: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Horspool, R., Pereira, D., Scholz, B. (2006). Fast Profile-Based Partial Redundancy Elimination. \i JMLC 2006 - 7th Joint Modular Languages Conference 2006\i0 , Germany: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Burgstaller, B., Xue, J. (2006). Minimizing Bank Selection Instructions for Partitioned Memory Architectures. \i CASES 2006 - The IEEE International Conference on Compilers, Architecture, and Synthesis for Embedded Systems\i0 , New York: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hames, L., Scholz, B. (2006). Nearly Optimal Register Allocation with PBQP*. \i JMLC 2006 - 7th Joint Modular Languages Conference 2006\i0 , Germany: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Scholz, B., Blieberger, J. (2006). Symbolic Analysis of Imperative Programming Languages. \i JMLC 2006 - 7th Joint Modular Languages Conference 2006\i0 , Germany: Springer.}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2004}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Burgstaller, B., Blieberger, J., Scholz, B. (2004). On The Tree Width Of Ada Programs. \i 9th Ada-Europe International Conference on Reliable Software Technologies\i0 , Berlin: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Horspool, R., Knoop, J. (2004). Optimizing For Space And Time Usage With Speculative Partial Redundancy Elimination. \i 2004 ACM SIGPLAN/SIGBED  Conference on Languages, Compilers and Tools for Embedded Systems (LCTES '04)\i0 , New York, USA: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2003}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Eckstein, E., Scholz, B. (2003). Addressing Mode Selection. \i International Symposium on Code Generation and Optimization (CGO'03)\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Fahringer, T., Scholz, B. (2003). \i Advanced Symbolic Analysis for Compilers: New Techniques and Algorithms for Symbolic Program Analysis and Optimization\i0 . Berlin: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Blieberger, J., Burgstaller, B., Scholz, B. (2003). Busy Wait Analysis. \i 8th International Conference on Reliable Software Technologies Ada-Europe 2003\i0 , Toulouse, France: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Eckstein, E., Konig, O., Scholz, B. (2003). Code Instruction Selection Based on SSA-Graphs. \i 7th International Workshop on Software and Compilers for Embedded Systems\i0 , Vienna: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Hirnschott, U., Krall, A., Scholz, B. (2003). Graph Coloring vs. Optimal Register Allocation for Optimizing Compilers. \i JMLC 2006 - 7th Joint Modular Languages Conference 2006\i0 , Germany: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Mehofer, E., Horspool, R. (2003). Partial Redundancy Elimination with Predication Techniques. \i 9th International Euro-Par Conference\i0 , Berlin: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Mehofer, E., Horspool, R. (2003). Predicated Partial Redundancy Elimination using a Cost Analysis. \i Parallel Processing Letters\i0 , 13(4), 525-536. <a href="http://dx.doi.org/10.1142/S0129626403001483">[More Information]</a>}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2002}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Mehofer, E. (2002). Dataflow Frequency Analysis based on Whole Program Paths. \i 11th International Conference on Parallel Architectures and Compilation Techniques (PACT'02)\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Scholz, B., Eckstein, E. (2002). Register Allocation for Irregular Architectures. \i Joint-Conference on Languages, Compilers, and Tools for Embedded Systems and Software and Compilers for Embedded Systems (LCTES/SCOPES'02)\i0 , New York, USA: Association for Computing Machinery (ACM).}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Probst, M., Krall, A., Scholz, B. (2002). Register Liveness Analysis for Optimizing Dynamic Binary Translation. \i Ninth Working Conference on Reverse Engineering, 2002\i0 , Virginia, USA: Institute of Electrical and Electronics Engineers (IEEE).}
\par \pard \ql \sb20 \sa80 {\fs24 \f0 \b 2001}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Mehofer, E., Scholz, B. (2001). A Novel Probabilistic Data Flow Framework. \i 10th International Conference, Compiler Construction 2001\i0 , Berlin: Springer.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Fahringer, T., Blaha, P., Hoessinger, A., Luitz, J., Mehofer, E., Moritsch, H., Scholz, B. (2001). Development and performance analysis of real-world
\par applications for distributed and parallel architectures. \i Concurrency and Computation: Practice and Experience\i0 , 13(10), 841-868.}
\par \pard \ql \sb20 \sa80 {\fs20 \f0 Mehofer, E., Scholz, B. (2001). Probabilistic Communication Optimizations and Parallelization for Distributed-Memory Systems. \i 9th Euromicro Workshop on Parallel and Distributed Processing (PDP'01)\i0 , USA: Institute of Electrical and Electronics Engineers (IEEE).}

}